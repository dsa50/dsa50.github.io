WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.375
Now let's implement the BFS function.

00:00:03.375 --> 00:00:05.505
So let's write some pseudocode first.

00:00:05.505 --> 00:00:06.765
So we need a queue,

00:00:06.765 --> 00:00:09.495
we want to keep track of the visit order.

00:00:09.495 --> 00:00:12.540
We want to start at the root node.

00:00:12.540 --> 00:00:15.240
Add root to queue.

00:00:15.240 --> 00:00:20.895
Then while queue is not empty, what do we do?

00:00:20.895 --> 00:00:24.585
We're going to dequeue the node,

00:00:24.585 --> 00:00:26.895
we're going to visit that node,

00:00:26.895 --> 00:00:29.760
add left child if exists,

00:00:29.760 --> 00:00:33.435
and also add the right child if exists.

00:00:33.435 --> 00:00:40.525
Then at the end, we also want to return the visit order.

00:00:40.525 --> 00:00:42.830
So let's see how we write this out.

00:00:42.830 --> 00:00:47.905
Let's create a queue, let's define visit order as a list,

00:00:47.905 --> 00:00:49.680
and let's start at the root.

00:00:49.680 --> 00:00:53.885
So tree.get_root, and then we're going to add it to the queue.

00:00:53.885 --> 00:00:56.750
So we go q.enq.

00:00:56.750 --> 00:00:59.270
Then while it's not empty.

00:00:59.270 --> 00:01:03.810
So while the length of q is greater than 0.

00:01:03.810 --> 00:01:04.940
Let's dequeue it.

00:01:04.940 --> 00:01:08.910
So node equals q.deq. We're going to visit it.

00:01:08.910 --> 00:01:12.465
So visit_order.append node.

00:01:12.465 --> 00:01:14.280
So we visited that node.

00:01:14.280 --> 00:01:16.905
Then add a left child if it exists.

00:01:16.905 --> 00:01:21.500
So if node.has_left_child, then we're going to

00:01:21.500 --> 00:01:26.720
add it to the queue in q node.get_left_child.

00:01:26.720 --> 00:01:33.045
Similarly, if node.has_right_child, we're going to add it to the queue.

00:01:33.045 --> 00:01:35.270
Then once we're all done with the loop,

00:01:35.270 --> 00:01:38.345
then we're going to return the visit order.

00:01:38.345 --> 00:01:41.015
So let's see if this works.

00:01:41.015 --> 00:01:44.600
So we want it to be visiting apple, banana, cherry, dates.

00:01:44.600 --> 00:01:48.810
So we see apple, banana, cherry, dates. Nice.


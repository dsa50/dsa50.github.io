WEBVTT
Kind: captions
Language: en

00:00:00.290 --> 00:00:03.630
There are several different
approaches to DFS and trees.

00:00:03.630 --> 00:00:06.560
First, we'll talk about
pre-order traversals.

00:00:06.560 --> 00:00:08.930
To me, the pre says,

00:00:08.930 --> 00:00:13.170
check off a node as you see it before
you traverse any further in the tree.

00:00:13.170 --> 00:00:16.580
There are other methods of traversal
in which you check off nodes

00:00:16.580 --> 00:00:18.180
after you've seen their children.

00:00:18.180 --> 00:00:20.860
So this rule is really
important to keep in mind.

00:00:20.860 --> 00:00:24.630
We start at the route and immediately
check off that we've seen it.

00:00:24.630 --> 00:00:27.000
Next, we pick one of the children.

00:00:27.000 --> 00:00:30.560
Normally the left one by convention,
and check it off too.

00:00:30.560 --> 00:00:34.820
We would continue traversing down
the left most nodes until we had a leaf.

00:00:34.820 --> 00:00:38.840
We check off the leaf and
from there go back up to the parent.

00:00:38.840 --> 00:00:42.570
Now we can traverse to the right
child and check it off too.

00:00:42.570 --> 00:00:45.940
We're done with this subtree, so
we can travel back up to the root and

00:00:45.940 --> 00:00:47.790
look at its right child.

00:00:47.790 --> 00:00:51.129
We do the same steps until
we've seen everything.

00:00:51.130 --> 00:00:52.540
Cool, were done!

00:00:52.540 --> 00:00:56.140
This might seem intuitive, but
it'll make more sense once we compare it

00:00:56.140 --> 00:01:00.170
against a different type of traversal
like an in-order traversal.

00:01:00.170 --> 00:01:03.750
The trick here is that we're moving
through the nodes in the same order,

00:01:03.750 --> 00:01:08.230
since this is still a DFS and
we need to explore all children first.

00:01:08.230 --> 00:01:11.690
However, this time we're going to check
off the nodes in a different order.

00:01:11.690 --> 00:01:14.970
We're only going to check off a node
when we've seen its left child and

00:01:14.970 --> 00:01:15.960
come back to it.

00:01:15.960 --> 00:01:17.759
All right,
let's see what this looks like.

00:01:17.760 --> 00:01:21.560
Again, we start at the root, since
we haven't seen the left child yet.

00:01:21.560 --> 00:01:24.100
We have to keep traversing
down until we hit a leaf.

00:01:25.110 --> 00:01:27.900
We check off the leaf and
move up to the parent.

00:01:28.950 --> 00:01:31.920
Because we've seen the left child
now we can actually check off

00:01:31.920 --> 00:01:33.190
the parent this time.

00:01:33.190 --> 00:01:37.210
We move on to this right node, which has
no children, so we can check it off too.

00:01:37.210 --> 00:01:38.860
We go back up to the root and

00:01:38.860 --> 00:01:42.930
repeat all of this on the right
side until we're done.

00:01:42.930 --> 00:01:44.950
Why is this called in-order?

00:01:44.950 --> 00:01:47.730
Well, we pretty much went
through the nodes in order

00:01:47.730 --> 00:01:49.779
from the left most to the right.

00:01:50.910 --> 00:01:55.520
We had to move up and down a lot, but if
you just look strictly at left to right,

00:01:55.520 --> 00:01:58.000
we actually did go through
everything in order.

00:01:58.000 --> 00:02:00.750
Lastly, we have
the post-order traversal.

00:02:00.750 --> 00:02:03.870
This time we won't be able to
check off a node until we've seen

00:02:03.870 --> 00:02:09.300
all of its descendants or we visited
both of its children and returned.

00:02:09.300 --> 00:02:13.380
Similar steps, we begin at the root,
don't check it off, but

00:02:13.380 --> 00:02:15.190
continue down to a leaf.

00:02:15.190 --> 00:02:18.220
We check off the leaf and
move to the parent.

00:02:18.220 --> 00:02:20.660
This time we don't check
off the parent though,

00:02:20.660 --> 00:02:22.859
we just move on to the right node.

00:02:22.860 --> 00:02:26.220
Once we've checked off the right child
we can go back up to the parent and

00:02:26.220 --> 00:02:28.000
finally check it off too.

00:02:28.000 --> 00:02:32.600
Again, we'll skip over the root node and
just move all the way down to the right.

00:02:32.600 --> 00:02:35.690
Once everything there is good we can
move back up to the root and get it.


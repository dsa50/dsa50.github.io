WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
Now we're going to look at binary search tree insertion.

00:00:03.000 --> 00:00:05.580
So here, let's say we have a tree,

00:00:05.580 --> 00:00:07.260
we want to insert five.

00:00:07.260 --> 00:00:09.135
Right now the tree is empty,

00:00:09.135 --> 00:00:11.340
so we'll just put five as the root.

00:00:11.340 --> 00:00:13.785
Next, we want to insert six.

00:00:13.785 --> 00:00:19.575
So we noticed, what we do is we check and compare six to five,

00:00:19.575 --> 00:00:21.705
and six is greater than five,

00:00:21.705 --> 00:00:23.775
which means we'll insert to the right.

00:00:23.775 --> 00:00:25.545
Since there's nothing else on the right,

00:00:25.545 --> 00:00:29.760
we'll just go ahead and let six be the right child of five.

00:00:29.760 --> 00:00:31.720
Next, let's insert four.

00:00:31.720 --> 00:00:33.500
So we start at the root again.

00:00:33.500 --> 00:00:36.020
We compare four to five,

00:00:36.020 --> 00:00:37.550
and four is less than five,

00:00:37.550 --> 00:00:39.040
so we insert to the left.

00:00:39.040 --> 00:00:40.955
Since there's nothing here so far,

00:00:40.955 --> 00:00:43.895
four can be a left child of five.

00:00:43.895 --> 00:00:45.775
Now let's insert two.

00:00:45.775 --> 00:00:47.495
Again, we start at the root,

00:00:47.495 --> 00:00:50.420
we compare two to five and two is less than five,

00:00:50.420 --> 00:00:52.235
so we're going to traverse to the left.

00:00:52.235 --> 00:00:54.275
Since there's already a left child here,

00:00:54.275 --> 00:00:56.120
we'll do another comparison.

00:00:56.120 --> 00:00:58.130
Two is less than four,

00:00:58.130 --> 00:01:00.205
which means we'll insert it to the left.

00:01:00.205 --> 00:01:03.305
Okay, so there's question of how you handle duplicates,

00:01:03.305 --> 00:01:05.015
and this can be a design choice.

00:01:05.015 --> 00:01:09.425
So what happens if you already have five in a tree and you insert five again?

00:01:09.425 --> 00:01:13.510
Well, one option is to just override that value or write the node.

00:01:13.510 --> 00:01:18.065
Another option would be to keep a count of how many times you've inserted that node.

00:01:18.065 --> 00:01:20.090
So if you've inserted five a second time,

00:01:20.090 --> 00:01:22.190
that counter gets incremented to two.

00:01:22.190 --> 00:01:25.720
Another option is to keep a list of the duplicate nodes.

00:01:25.720 --> 00:01:30.065
This might be helpful if the node value is a key,

00:01:30.065 --> 00:01:33.050
but each node may actually contain additional information,

00:01:33.050 --> 00:01:35.720
and so they're actually slightly different.

00:01:35.720 --> 00:01:38.230
You want to just keep track of all of them in a list.

00:01:38.230 --> 00:01:41.285
For our exercise, we're just going to assume option one,

00:01:41.285 --> 00:01:44.490
that when there's a duplicate, we will just overwrite it.


WEBVTT
Kind: captions
Language: ja-JP

00:00:00.290 --> 00:00:03.630
DFS にはいくつかの
ツリー走査法があります

00:00:03.630 --> 00:00:06.560
その 1 つが前順走査です

00:00:06.560 --> 00:00:08.930
前順走査では

00:00:08.930 --> 00:00:13.170
行き着いたノードをチェックしてから
次のノードに進みますが

00:00:13.170 --> 00:00:16.580
子ノードをチェックしてから
次のノードに進む

00:00:16.580 --> 00:00:18.180
メソッドもいくつかあります

00:00:18.180 --> 00:00:20.860
そのため、これから説明するルールを
覚えておくことが重要です

00:00:20.860 --> 00:00:24.630
まずルートから開始して
次のノードをチェックします

00:00:24.630 --> 00:00:27.000
次に子ノードを 1 つ選びますが

00:00:27.000 --> 00:00:30.560
通常、慣習に従って左のノードを
チェックします

00:00:30.560 --> 00:00:34.820
葉ノードに到達するまで一番左側のノードを
下方向にトラバースします

00:00:34.820 --> 00:00:38.840
葉ノードをチェックしたら
親ノードに戻ります

00:00:38.840 --> 00:00:42.570
今度は右側のノードをトラバースして
各要素をチェックします

00:00:42.570 --> 00:00:45.940
これでこのサブツリーは終了で
ルートに戻って右側の子ノードを

00:00:45.940 --> 00:00:47.790
確認します

00:00:47.790 --> 00:00:51.129
すべてチェックし終わるまで
このステップを繰り返します

00:00:51.130 --> 00:00:52.540
できました

00:00:52.540 --> 00:00:56.140
これは直感的な方法に
思われるかもしれませんが

00:00:56.140 --> 00:01:00.170
間順走査のような他の走査と
比較するとわかりやすいと思います

00:01:00.170 --> 00:01:03.750
前順走査も DFS なので他の走査法と
同じ順序でノードをトラバースしますが

00:01:03.750 --> 00:01:08.230
前順操作ではすべての
子ノードを調査する必要があります

00:01:08.230 --> 00:01:11.690
今度は異なる順序でノードを
チェックしてみます

00:01:11.690 --> 00:01:14.970
左側の子ノードを確認したら
チェックを入れて

00:01:14.970 --> 00:01:15.960
そのままルートに戻ります

00:01:15.960 --> 00:01:17.759
では実際に
やってみましょう

00:01:17.760 --> 00:01:21.560
ここには左の子ノードがないので
この場合もルートから開始し

00:01:21.560 --> 00:01:24.100
葉ノードに行き着くまで
下方向にトラバースします

00:01:25.110 --> 00:01:27.900
葉ノードをチェックしたら
親ノードに戻ります

00:01:28.950 --> 00:01:31.920
すでに左の子ノードをチェック
したので今度は親ノードを

00:01:31.920 --> 00:01:33.190
チェックします

00:01:33.190 --> 00:01:37.210
次の右ノードには子ノードがないので
このノードにもこのままチェックを入れます

00:01:37.210 --> 00:01:38.860
ルートに戻り右のノードに対しても

00:01:38.860 --> 00:01:42.930
最後まで同じステップを
繰り返します

00:01:42.930 --> 00:01:44.950
これはなぜ間順走査と呼ばれるのでしょうか

00:01:44.950 --> 00:01:47.730
それは一番左から右に向かって
順番にノードをチェック

00:01:47.730 --> 00:01:49.779
しているからです

00:01:50.910 --> 00:01:55.520
上下の移動は多いですが
厳密に左から右へと

00:01:55.520 --> 00:01:58.000
すべてのノードを順序どおりに
チェックしました

00:01:58.000 --> 00:02:00.750
さて、3 つ目は
後順走査です

00:02:00.750 --> 00:02:03.870
この方法はすべての子孫に到達するまで
あるいは子ノードを両方チェックして

00:02:03.870 --> 00:02:09.300
戻るまでノードに
チェックを入れられません

00:02:09.300 --> 00:02:13.380
後順走査もルートから開始しますが
ルートにはチェックを入れずに

00:02:13.380 --> 00:02:15.190
葉ノードまで進みます

00:02:15.190 --> 00:02:18.220
葉ノードをチェックしたら
親ノードに戻ります

00:02:18.220 --> 00:02:20.660
しかし、ここでは親ノードを
チェックせずに

00:02:20.660 --> 00:02:22.859
右のノードに移ります

00:02:22.860 --> 00:02:26.220
右の子ノードをチェックしたら
親ノードに戻って

00:02:26.220 --> 00:02:28.000
この段階でやっと親ノードをチェックできます

00:02:28.000 --> 00:02:32.600
そして、ここでもルートノードはチェックせず
右側を葉ノードまで下りてチェックし

00:02:32.600 --> 00:02:35.690
右側のノードをすべてチェックしたら
ルートに戻って最終的にルートをチェックします


WEBVTT
Kind: captions
Language: ja-JP

00:00:00.330 --> 00:00:02.880
ツリーには役立つ特性が
数多くあります

00:00:04.220 --> 00:00:08.620
ただし、ツリーは連結リストの
拡張版にすぎません

00:00:08.620 --> 00:00:11.549
連結リストでは先頭に
要素が 1 つ

00:00:11.550 --> 00:00:13.990
そして別の要素への次のポインターがあり
これが続きます

00:00:15.300 --> 00:00:16.980
ツリーも同様です

00:00:16.980 --> 00:00:20.900
最初の要素はルートと呼ばれます

00:00:20.900 --> 00:00:23.930
ただしツリーは次の要素を 1 つだけではなく
複数持ちます

00:00:25.110 --> 00:00:28.150
連結リストは大抵
水平に描画されますが

00:00:28.150 --> 00:00:31.320
ツリーは通常このように
垂直方向に描画されます

00:00:31.320 --> 00:00:36.200
連結リストと同じく、ツリーの
各要素はデータを含みます

00:00:36.200 --> 00:00:41.600
ツリーの各要素で値を含むものは
通常ノードと呼ばれます

00:00:41.600 --> 00:00:44.430
このツリーにいくつか
制限を追加してみましょう

00:00:45.550 --> 00:00:49.419
まず
ツリーは完全につながっている必要があります

00:00:49.420 --> 00:00:51.730
つまり
ルートから開始した場合

00:00:51.730 --> 00:00:54.470
何らかの方法でツリーの全ノードに到達できるということです

00:00:55.520 --> 00:00:58.630
これはノードがつながっていない場合の例です

00:00:58.630 --> 00:01:00.740
これは明らかにツリーではありません

00:01:01.760 --> 00:01:05.480
次に、ツリーにはサイクルがあってはなりません

00:01:05.480 --> 00:01:10.620
サイクルは同じノードに 2 回ヒットできる
方法がある場合に発生します

00:01:10.620 --> 00:01:14.220
たとえば、このツリーでは
ルートへと戻るように接続されています

00:01:15.350 --> 00:01:18.390
ルートからスタートしても
結局ルートに戻ります

00:01:18.390 --> 00:01:20.720
このツリーについても同じことがいえます

00:01:20.720 --> 00:01:23.500
矢印を無視すれば
円状に進めます

00:01:24.520 --> 00:01:25.729
これはサイクルとして見なされるので

00:01:25.730 --> 00:01:26.500
注意してください


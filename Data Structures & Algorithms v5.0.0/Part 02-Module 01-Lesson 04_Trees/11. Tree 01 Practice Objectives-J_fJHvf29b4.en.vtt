WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.045
Now we're going to learn how to work with trees in code.

00:00:03.045 --> 00:00:06.390
Now a common question you may ask whenever you're learning anything is,

00:00:06.390 --> 00:00:08.070
will I ever use this in real life?

00:00:08.070 --> 00:00:10.740
I'd say, especially with tree data structures,

00:00:10.740 --> 00:00:12.135
the answer is yes.

00:00:12.135 --> 00:00:15.660
Trees show up quite a lot in software engineering in databases,

00:00:15.660 --> 00:00:17.865
anytime you're dealing with storing data,

00:00:17.865 --> 00:00:22.590
and the nice thing about trees is you're able to retrieve values we need more

00:00:22.590 --> 00:00:25.590
quickly because you don't actually have to touch

00:00:25.590 --> 00:00:28.935
upon all the nodes stored in the tree before you find what you're looking for.

00:00:28.935 --> 00:00:31.375
Also, when you're studying machine learning

00:00:31.375 --> 00:00:34.595
tree show up again in tree-based machine learning models,

00:00:34.595 --> 00:00:36.770
such as variance of decision trees.

00:00:36.770 --> 00:00:40.145
So here are the coding practice objectives for this lesson,

00:00:40.145 --> 00:00:43.805
you'll learn how to create a binary tree in code from scratch.

00:00:43.805 --> 00:00:45.770
You'll learn how to traverse the tree,

00:00:45.770 --> 00:00:48.910
depth first search and breadth first search in code.

00:00:48.910 --> 00:00:50.300
You'll also learn how to create

00:00:50.300 --> 00:00:54.425
a binary search tree and also how to insert search and delete nodes.

00:00:54.425 --> 00:00:59.300
Just keep in mind the average time complexity for these tree operations is log

00:00:59.300 --> 00:01:06.960
n. A good way to remember that is when you think of trees, think of logs.


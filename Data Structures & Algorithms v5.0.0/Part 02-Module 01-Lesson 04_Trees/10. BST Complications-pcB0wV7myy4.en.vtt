WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.120
Binary search trees are nice to look at when they're full but

00:00:03.120 --> 00:00:06.880
there's no rule that states that BSTs need to look that way.

00:00:06.880 --> 00:00:09.540
This is a completely legitimate BST,

00:00:09.540 --> 00:00:11.600
but it looks very different.

00:00:11.600 --> 00:00:14.295
There are two fewer children for every parent

00:00:14.295 --> 00:00:17.550
and everything on the right is bigger than its parent.

00:00:17.550 --> 00:00:20.430
We call this an unbalanced binary tree,

00:00:20.430 --> 00:00:24.165
since the distribution of nodes is skewed to the right side.

00:00:24.165 --> 00:00:26.850
A weird structure like this could start at the root,

00:00:26.850 --> 00:00:30.330
but it could also take place in one of the sub trees.

00:00:30.330 --> 00:00:34.620
You can also consider this to be the worst case scenario for a BST.

00:00:34.620 --> 00:00:36.885
When the tree looks like this; search,

00:00:36.885 --> 00:00:41.460
insert and delete all actually take linear time in the worst case.

00:00:41.460 --> 00:00:46.830
Here the worst case would be searching through every element from the root to the leaf.

00:00:46.830 --> 00:00:50.890
Thus the average case for these operations is Big O of log n,

00:00:50.890 --> 00:00:54.000
and the worst case for all of them is Big O of n.


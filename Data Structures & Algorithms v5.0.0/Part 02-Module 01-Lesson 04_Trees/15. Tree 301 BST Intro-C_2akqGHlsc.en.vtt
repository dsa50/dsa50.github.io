WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.520
Now we're going to look at Binary Search Trees.

00:00:02.520 --> 00:00:07.305
Binary Search Trees are nice because nodes have an order,

00:00:07.305 --> 00:00:08.865
and because they have an order,

00:00:08.865 --> 00:00:10.080
when we traverse the tree,

00:00:10.080 --> 00:00:12.345
we can actually save ourselves a lot of time,

00:00:12.345 --> 00:00:14.490
which means when we insert a node,

00:00:14.490 --> 00:00:16.920
the run time, the average complexity is log

00:00:16.920 --> 00:00:21.000
n. Same thing when we search for a node to see if it exists.

00:00:21.000 --> 00:00:24.000
The average complexity is also log n,

00:00:24.000 --> 00:00:26.340
where n is the number of nodes in the tree,

00:00:26.340 --> 00:00:28.035
and same with deletion,

00:00:28.035 --> 00:00:31.770
log n. So here's how it works.

00:00:31.770 --> 00:00:35.040
Here's 5, node 5,

00:00:35.040 --> 00:00:37.380
and then 6 is greater than 5,

00:00:37.380 --> 00:00:39.855
so it's to the right of node 5,

00:00:39.855 --> 00:00:41.490
4 is less than 5,

00:00:41.490 --> 00:00:43.305
so it's to the left of 5,

00:00:43.305 --> 00:00:45.795
2 is less than 4,

00:00:45.795 --> 00:00:49.140
so it's also to the left of 4.

00:00:49.140 --> 00:00:54.160
Notice that everything in this left subtree of 5 is less than 5.

00:00:54.160 --> 00:00:58.860
Everything that's going to be in the right subtree of 5 is greater than 5.


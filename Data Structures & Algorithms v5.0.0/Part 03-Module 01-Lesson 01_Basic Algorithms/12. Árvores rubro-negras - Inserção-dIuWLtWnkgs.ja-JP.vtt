WEBVTT
Kind: captions
Language: ja-JP

00:00:00.360 --> 00:00:03.210
新しいノードの挿入は
まるで魔法のはじまりです

00:00:03.210 --> 00:00:05.520
ツリーと挿入するノードには
いくつかの状態があり

00:00:05.520 --> 00:00:09.100
異なるアクションを必要とします

00:00:09.100 --> 00:00:13.390
結果として得られるツリーは赤黒木と BST の
両方のルールに従わなくてはならないことを

00:00:13.390 --> 00:00:15.130
覚えておいてください

00:00:15.130 --> 00:00:16.920
ここには情報がたくさんあります

00:00:16.920 --> 00:00:21.285
最初の目標は赤黒木の仕組みを確認し
理解することです

00:00:21.285 --> 00:00:25.750
詳しい情報を覚えるために後からビデオを
見直してもかまいません

00:00:25.750 --> 00:00:29.860
挿入の全体的なルールのひとつは
赤ノードとしてノードを挿入する必要があるということです

00:00:29.860 --> 00:00:33.490
ここからは違いが
わかりやすいように

00:00:33.490 --> 00:00:38.580
赤と四角で表し
必要に応じて色を変えます

00:00:38.580 --> 00:00:43.400
最初の状況はツリーに
最初のノードを挿入する場合です

00:00:43.400 --> 00:00:46.839
これはルートのため
ルートは黒である必要があるというルールに従うのであれば

00:00:46.840 --> 00:00:48.850
色を黒に変更します

00:00:48.850 --> 00:00:51.200
そうでない場合は何もする必要はありません

00:00:51.200 --> 00:00:54.870
新しい親ノードが黒の場合は
何もする必要はありません

00:00:54.870 --> 00:00:58.400
追加しているのは赤ノードなので
パスにある黒ノードのバランスを崩しているわけでも

00:00:58.400 --> 00:01:02.330
他のルールに違反している
わけでもありません

00:01:02.330 --> 00:01:04.190
親が赤の場合

00:01:04.190 --> 00:01:07.560
解がより複雑になるケースが
いくつかあります

00:01:07.560 --> 00:01:08.740
親とその兄弟が赤の場合

00:01:08.740 --> 00:01:12.839
色を黒に変える必要があります

00:01:12.840 --> 00:01:14.990
挿入するノードの親

00:01:14.990 --> 00:01:18.429
そして祖父母は赤になります

00:01:18.430 --> 00:01:21.740
ノードの色をこのように切り替えることで
特定パスにおける黒ノードの数を

00:01:21.740 --> 00:01:23.700
維持しているわけです

00:01:24.170 --> 00:01:26.690
このツリーにあるパスをすべて見てみましょう

00:01:26.690 --> 00:01:30.149
各パスにある黒ノードの数は
まだ 2 つです

00:01:30.150 --> 00:01:33.600
ここでの一番大きな問題は
祖父母を変えると

00:01:33.600 --> 00:01:35.470
別のプロパティに違反してしまうかもしれない点です

00:01:35.470 --> 00:01:40.121
祖父母を新しく挿入された
ノードとして扱い

00:01:40.121 --> 00:01:43.565
同じケースおよびルールに従って
祖父母とその祖先を変更できます

00:01:43.565 --> 00:01:45.250
ここではこれをケース 1 のように扱い

00:01:45.250 --> 00:01:48.290
黒に戻します
ルートは黒のままにしたいからです


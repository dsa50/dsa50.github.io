WEBVTT
Kind: captions
Language: ja-JP

00:00:00.210 --> 00:00:04.970
ツリー構造で言う平衡木とは
ノードが少数レベルに密集しています

00:00:04.970 --> 00:00:09.290
非平衡木とは
ノードが多数のレベルに散らばっています

00:00:09.290 --> 00:00:13.450
非平衡木の極端なタイプは
リンクされたリストのように

00:00:13.450 --> 00:00:16.189
すべてのノードに子が 1 つだけあるタイプです

00:00:16.190 --> 00:00:19.250
この定義によると
平衡二分木は

00:00:19.250 --> 00:00:23.200
使用するレベル数を
最小化しようと試行している木です

00:00:23.200 --> 00:00:27.900
挿入と削除中に自己平衡を図る
アルゴリズムもあります

00:00:27.900 --> 00:00:31.270
そしてノード自身は
補足的な特性を持っています

00:00:31.270 --> 00:00:34.200
この最も一般的な例が
赤黒木で

00:00:34.200 --> 00:00:37.100
二分探索木の
拡張型です

00:00:37.100 --> 00:00:39.650
コンピューターサイエンスでは
非常に一般的で

00:00:39.650 --> 00:00:42.290
名称も非常に
直接的です

00:00:42.290 --> 00:00:46.570
この木のタイプでは
ノードに色特性が割り当てられ

00:00:46.570 --> 00:00:49.540
値は赤か黒の
いずれかになります

00:00:49.540 --> 00:00:53.750
赤と黒の色を使用しているのは
単なる慣例です

00:00:53.750 --> 00:00:57.100
必要なことは
2 つの異なる種類のノードを

00:00:57.100 --> 00:00:58.330
区別することです

00:00:58.330 --> 00:01:03.420
赤黒木の 2 つ目の特性は
空 (null) の葉ノードがあることです

00:01:03.420 --> 00:01:06.800
ツリー構造にある
2 つの葉を持たないノードは

00:01:06.800 --> 00:01:08.600
null である子を持つ必要があります

00:01:08.600 --> 00:01:12.830
見て分かるように null の葉ノードは
すべて黒になる必要があります

00:01:12.830 --> 00:01:16.140
ノードが赤の場合は
黒ノードを 2 つ子に持ちます

00:01:17.230 --> 00:01:22.000
追加のオプション規則として
ルートノードは黒と決まっています

00:01:22.000 --> 00:01:27.170
これらのツリー構造が有用となるためには
あるノードから子孫の null ノードまでのすべてのパスには

00:01:27.170 --> 00:01:33.110
同じ数の黒ノードが含まれるというのが
最後の規則です

00:01:33.110 --> 00:01:36.860
これらの規則は挿入について話す際に
実際に実行されるでしょう

00:01:36.860 --> 00:01:39.110
さしあたり、これらの規則と特に最後の規則は

00:01:39.110 --> 00:01:43.280
ツリーバランスが崩れ過ぎないよう
保証することを覚えておいてください


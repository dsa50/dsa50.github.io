WEBVTT
Kind: captions
Language: ja-JP

00:00:00.580 --> 00:00:05.490
グラフは機能的に同一ですが
異なる方法で構築されています

00:00:05.490 --> 00:00:09.510
オブジェクト指向言語を使用している場合
頂点とエッジのオブジェクトを作成し

00:00:09.510 --> 00:00:10.520
それらに名前や重み

00:00:10.520 --> 00:00:14.770
ID 番号といった特性を
付加することができます

00:00:15.990 --> 00:00:19.410
頂点は接続しているエッジのリストを持つことが可能で
その逆もありえます

00:00:20.650 --> 00:00:24.520
ですが頂点やエッジオブジェクト全体を
探索する必要がある場合

00:00:24.520 --> 00:00:27.419
グラフをトラバースする操作は
より不便を強いられます

00:00:28.600 --> 00:00:31.890
リストのみを使用した
シンプルなグラフで

00:00:31.890 --> 00:00:34.110
接続を表現する方法がいくつかあります

00:00:34.110 --> 00:00:35.920
その例がエッジリストです

00:00:35.920 --> 00:00:40.840
これはまさに想像通り
単なるエッジのリストです

00:00:40.840 --> 00:00:45.680
エッジ自体は 2 つの要素のリストで
表現されます

00:00:45.680 --> 00:00:51.140
これらの要素は通常数字で
頂点の ID 番号に対応しています

00:00:51.140 --> 00:00:52.322
つまり最終的に

00:00:52.322 --> 00:00:57.590
このリストは 2 つのノードを表し
それらを結ぶ 1 つのエッジを持ちます

00:00:57.590 --> 00:01:00.949
エッジリストは
すべてのより小さなリストを含有したものです

00:01:02.300 --> 00:01:06.190
エッジリストが他のリストの
リストを含むことから

00:01:06.190 --> 00:01:10.840
これらは二次元リストまたは
2D リストと呼ばれます

00:01:10.840 --> 00:01:13.470
リストのリストのリストを持つ場合

00:01:13.470 --> 00:01:15.841
これは 3D リストと
呼ばれます

00:01:15.841 --> 00:01:21.625
隣接リストはグラフのエッジを示す
別の方法です

00:01:21.626 --> 00:01:26.311
隣接リストでは通常
頂点は ID 番号を持ち

00:01:26.311 --> 00:01:29.790
これは配列のインデックスに対応しています

00:01:29.790 --> 00:01:33.920
配列では各スペースはノードリストを
格納するために使用され

00:01:33.920 --> 00:01:36.150
ID を持つノードは隣接しています

00:01:37.180 --> 00:01:42.530
たとえばインデックス 0 の開始点は
ID が 0 の頂点を表しています

00:01:42.530 --> 00:01:46.800
頂点は 1 つのノードと
1 つのエッジを共有しているため

00:01:46.800 --> 00:01:49.320
ノードの参照は
配列の最初のスポットに格納されます

00:01:50.390 --> 00:01:53.320
繰り返しますが
隣接リストは二次元なので

00:01:53.320 --> 00:01:55.860
リストには
別のリストが含まれています


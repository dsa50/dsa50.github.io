WEBVTT
Kind: captions
Language: ja-JP

00:00:00.150 --> 00:00:01.950
では、グラフとはどのようなものでしょうか

00:00:03.370 --> 00:00:04.420
ちょっと
待って

00:00:04.420 --> 00:00:08.189
グラフというのは傾向を示す
チャートだと思ってたんですが

00:00:08.189 --> 00:00:11.720
線グラフとか
関数グラフとか

00:00:11.720 --> 00:00:13.860
実は、ここで取り上げるのは
そういった類のグラフではありません

00:00:13.860 --> 00:00:14.580
もう一度やってみましょう

00:00:15.580 --> 00:00:18.470
ここでのグラフの定義は
どちらかというとこんな感じです

00:00:18.470 --> 00:00:21.669
グラフの目的は
異なる物同士がどうのように関連しているか

00:00:21.670 --> 00:00:23.400
示すことです

00:00:23.400 --> 00:00:25.790
これはネットワークと呼ばれることもあります

00:00:25.790 --> 00:00:28.396
多くの点で、グラフは
ツリーに似ています

00:00:28.396 --> 00:00:32.750
まず、これらはノードまたは頂点と呼ばれ

00:00:32.750 --> 00:00:35.415
ここの線はエッジと呼ばれます

00:00:35.415 --> 00:00:39.565
実際、ツリーはより特殊な
グラフに過ぎません

00:00:39.565 --> 00:00:42.785
バイナリーツリーがツリーの一種で
BST がバイナリーツリーの

00:00:42.785 --> 00:00:45.985
一種であるようなものです

00:00:45.985 --> 00:00:49.785
有効なグラフの一例をお見せしましょう
この図ではどこからでもスタートでき

00:00:49.785 --> 00:00:52.735
パスをたどって
最初に戻ります

00:00:52.735 --> 00:00:55.300
このようなサイクルが可能なため

00:00:55.300 --> 00:00:58.669
グラフにはツリーのような
ルートノードはありません

00:00:58.670 --> 00:01:02.360
グラフの定義は実に曖昧ですが
このままにしておく必要があります

00:01:02.360 --> 00:01:05.580
予想されていたかもしれませんが
これを曖昧なままにしておく必要があるのは

00:01:05.580 --> 00:01:09.900
すべての異なるグラフのユースケースを
定義が網羅するようにするためです

00:01:09.900 --> 00:01:12.750
たとえば、ノードは
データを格納するグラフの一部であり

00:01:12.750 --> 00:01:16.920
エッジはその間をつなぐものに
過ぎないと言いたいところですが

00:01:16.920 --> 00:01:18.940
実はエッジもデータを格納できます

00:01:19.940 --> 00:01:23.500
グラフは初めはかなり
抽象的にみえるので

00:01:23.500 --> 00:01:25.660
いくつかの例を使って
より具体的にしてみましょう

00:01:25.660 --> 00:01:28.550
このグラフがソーシャルネットワークだと
想像してください

00:01:28.550 --> 00:01:30.440
このノードは私とします

00:01:30.440 --> 00:01:32.890
残りのグラフはこんな風に
描くことができます

00:01:32.890 --> 00:01:35.620
ここでは、ノードが人で
あることは明らかです

00:01:35.620 --> 00:01:39.850
ノード間のエッジは私たちの間の
関係を表しているかもしれません

00:01:39.850 --> 00:01:42.460
たとえば出会ったばかりの者同士とか

00:01:42.460 --> 00:01:44.919
このようにエッジでつながった
2 つのノードは

00:01:44.920 --> 00:01:48.870
「隣接」と呼ばれることがあり
すでに直接会っていることを意味します

00:01:48.870 --> 00:01:53.110
同じ時期に同じ街に住んでいた人の
グラフかもしれませんし

00:01:53.110 --> 00:01:55.670
同じプロジェクトを一緒に担当していた
人のグラフかもしれません

00:01:55.670 --> 00:01:57.840
人のフルネームや現在住んでいる
場所、誕生日など

00:01:57.840 --> 00:02:02.870
ノードはいくらでもデータを
含むことができます

00:02:02.870 --> 00:02:06.470
先ほど言ったように
エッジもデータを含むことができます

00:02:06.470 --> 00:02:10.300
エッジは関係の強度に関する
データを含むことがよくあります

00:02:10.300 --> 00:02:10.820
たとえば

00:02:10.820 --> 00:02:14.829
これらのエッジでこの 1 週間にお互いに
話をした回数を表すことができます

00:02:14.830 --> 00:02:17.590
次に、新しい例について考えてみましょう

00:02:17.590 --> 00:02:21.300
このグラフは長期旅行の
スケジュールだとします

00:02:21.300 --> 00:02:25.700
サンフランシスコから
東京に飛んで、クアラルンプール

00:02:25.700 --> 00:02:29.589
デリ、そこから復路でクアラルンプール
東京、サンフランシスコへと戻ります

00:02:30.620 --> 00:02:33.110
エッジには何の情報も含まれませんが

00:02:33.110 --> 00:02:35.510
フライトの長さを含めることができます

00:02:35.510 --> 00:02:39.299
このグラフを使用する目的によって
格納する情報は異なるということです


WEBVTT
Kind: captions
Language: ja-JP

00:00:00.580 --> 00:00:04.380
最後に、隣接行列も使用できます

00:00:04.380 --> 00:00:08.530
コンピューターサイエンスでは
行列は原則的に 2D 配列ですが

00:00:08.530 --> 00:00:10.660
内部リストはすべて
同じ長さです

00:00:11.890 --> 00:00:15.510
また行列は
長方形行列とも呼ばれます

00:00:15.510 --> 00:00:18.630
見ても分かるように
長方形です

00:00:18.630 --> 00:00:23.900
隣接行列は
隣接リストに非常に似ています

00:00:23.900 --> 00:00:28.669
外部配列のインデックスは
それらの ID を持つノードを表します

00:00:28.670 --> 00:00:33.110
そして内部リストは
どのノードが隣接しているかを表します

00:00:33.110 --> 00:00:38.320
ですがこれらの内部リストは
少し異なる方法で情報を表しています

00:00:38.320 --> 00:00:42.900
以前のリストは
隣接するノードの ID のみを含んでいました

00:00:42.900 --> 00:00:46.726
現在は内部リストには
配列の各ノードに 1 スロットがあり

00:00:46.726 --> 00:00:50.920
ノード ID は配列インデックスにマッピングされます

00:00:50.920 --> 00:00:56.340
2 つのノードの間にエッジがある場合は
1 が配列に記入され

00:00:56.340 --> 00:00:59.870
エッジがない場合は 0 になります

00:00:59.870 --> 00:01:03.900
この行列の対角線または
行番号が列番号と同じである位置は

00:01:03.900 --> 00:01:08.100
常に 0 であることに
気がつかれたでしょうか

00:01:08.100 --> 00:01:11.970
この値が 1 にしかならない場合があり
それはエッジが存在し開始および

00:01:11.970 --> 00:01:13.600
終了が同じノードの場合です

00:01:13.600 --> 00:01:16.640
ですがこのグラフには
これらは表示されていません

00:01:16.640 --> 00:01:21.440
また行列に単一のエッジが
2 回表示される場合にも注意してください

00:01:21.440 --> 00:01:25.780
たとえばこのエッジは
行が 0 で

00:01:25.780 --> 00:01:31.220
列が 1 のときと
行が 1 で 列が 0 のときに表示されます。

00:01:31.220 --> 00:01:35.320
どの表現方法を使用するかは
自分にとって最も理にかなっている

00:01:35.320 --> 00:01:39.539
そして最も頻繁に実行する
操作によって異なります

00:01:39.540 --> 00:01:42.890
ノード度や特定のノードに接している
エッジ数から判断している場合は

00:01:42.890 --> 00:01:46.860
隣接リストが
最速な場合もあります


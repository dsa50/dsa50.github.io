WEBVTT
Kind: captions
Language: ja-JP

00:00:00.330 --> 00:00:04.290
スタック構造は、最新の要素が重要な場合や
要素を実際に表示し

00:00:04.290 --> 00:00:07.930
保存する順番が重要な場合に
非常に便利です

00:00:07.930 --> 00:00:10.200
ニュースフィードのようなページがあるとします

00:00:10.200 --> 00:00:13.350
あなたは最新の要素に
迅速かつ頻繁に

00:00:13.350 --> 00:00:14.719
アクセスする必要がありますが

00:00:14.720 --> 00:00:17.970
ユーザーがスクロールダウンしたら
すべての要素を表示する必要があります

00:00:19.000 --> 00:00:22.620
スタックには関連する
いくつかの専門用語があります

00:00:22.620 --> 00:00:24.150
要素をスタックに追加する場合

00:00:24.150 --> 00:00:27.590
この操作は
挿入ではなくプッシュと呼ばれます

00:00:27.590 --> 00:00:29.710
要素をスタックから
削除する場合

00:00:29.710 --> 00:00:33.280
この操作は削除ではなく
ポップと呼ばれます

00:00:33.280 --> 00:00:36.940
ここではスタックの
先頭の要素に注目することが重要です

00:00:36.940 --> 00:00:40.830
操作は両方の操作において
一定時間でなければなりません

00:00:40.830 --> 00:00:45.920
これはおそらく混乱を招く点です
というのもスタックは抽象データ型で

00:00:45.920 --> 00:00:48.960
実際には別のデータ型で
実装可能です。

00:00:48.960 --> 00:00:52.149
各要素がどのように見えて
どう関連しているかは

00:00:52.149 --> 00:00:56.640
実際には特定されておらず
ただ要素を追加し削除するメソッドにすぎません

00:00:56.640 --> 00:01:00.150
たとえばスタックの実装に
リンクのリストを使用できます

00:01:00.150 --> 00:01:03.800
単一のリンクリストの先頭を
トラッキングし

00:01:03.800 --> 00:01:07.390
トップに要素を
継続して追加するだけです

00:01:07.400 --> 00:01:10.720
また注意が必要なのは
L.I.F.O. という表記を目にした場合で

00:01:10.720 --> 00:01:12.570
これはスタックに関連しています

00:01:12.570 --> 00:01:16.259
この意味は Last In, First Out (後入れ先出し) です

00:01:16.260 --> 00:01:20.560
プッシュを使用する場合は
スタックに最後に置いた要素

00:01:20.560 --> 00:01:23.690
ポップを​​使用する場合は
常に最初の要素から出されることを意味します

00:01:23.690 --> 00:01:26.500
これである程度
スタックについて

00:01:26.500 --> 00:01:27.270
理解が深まったと思います


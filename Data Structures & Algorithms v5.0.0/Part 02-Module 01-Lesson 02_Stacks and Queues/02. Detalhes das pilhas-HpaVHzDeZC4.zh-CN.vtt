WEBVTT
Kind: captions
Language: zh-CN

00:00:00.330 --> 00:00:04.290
当你只关心最近的元素 或者查看或保存元素的

00:00:04.290 --> 00:00:07.930
顺序很重要时 使用堆栈会很有帮助

00:00:07.930 --> 00:00:10.200
假设你有一个类似于新闻 Feed 的网页

00:00:10.200 --> 00:00:13.350
你需要更快速、更频繁地访问

00:00:13.350 --> 00:00:14.719
最近的元素

00:00:14.720 --> 00:00:17.970
但是 当用户往下滚动时 你需要显示所有元素

00:00:19.000 --> 00:00:22.620
堆栈具有自身特定的术语

00:00:22.620 --> 00:00:24.150
当你向堆栈中添加元素时

00:00:24.150 --> 00:00:27.590
该操作称为进栈 而不是插入

00:00:27.590 --> 00:00:29.710
当你从堆栈从删除元素时

00:00:29.710 --> 00:00:33.280
该操作叫做出栈 而不是删除

00:00:33.280 --> 00:00:36.940
记住 你只需关注堆栈顶部的元素

00:00:36.940 --> 00:00:40.830
所以这两种操作都是常量时间

00:00:40.830 --> 00:00:45.920
你可能有个疑惑点 因为堆栈比较抽象

00:00:45.920 --> 00:00:48.960
实际上可以用另一种数据类型来实现

00:00:48.960 --> 00:00:52.149
每个元素的样子及相互之间的联系并没具体说明

00:00:52.149 --> 00:00:56.640
只是提到添加和删除元素的方式

00:00:56.640 --> 00:01:00.150
例如 你可以使用链表来实现堆栈

00:01:00.150 --> 00:01:03.800
可以跟踪单个链表的前端内容 并随心所欲地

00:01:03.800 --> 00:01:07.390
在顶部添加元素

00:01:07.400 --> 00:01:10.720
我还要提一点 你可能看到了与堆栈相关的

00:01:10.720 --> 00:01:12.570
符号 L.I.F.O.

00:01:12.570 --> 00:01:16.259
这个缩写表示的是后进先出

00:01:16.260 --> 00:01:20.560
意思是通过入栈操作添加的最后一个元素始终是

00:01:20.560 --> 00:01:23.690
通过出栈操作拿出的首个元素

00:01:23.690 --> 00:01:26.500
它只是表示堆栈特性的一个华丽说法

00:01:26.500 --> 00:01:27.270
但愿你已经了解了这一概念

